import { isDev } from "@/globalConstants";
const POC_API = "";
const MATCH_API = ""; //模式异常检测

const API = window.DOIA_CONFIG.gateWayModule + "/api";
const PATH_V1 = isDev ? "" : API + "/v1/doia";
const PATH_POC_V1 = POC_API + API + "/v1/doia";
// 算法
const PATH_V1_ALGORITHM = PATH_V1 + "/algorithm/list";
// 泛型
const PATH_V1_GENERICS = PATH_V1 + "/algorithmGeneric/list";
const PATH_V1_GENERICS_ADD = PATH_V1 + "/algorithmGeneric/add";
const PATH_V1_GENERICS_PUBLISH = PATH_V1 + "/algorithmGeneric/publish";
const PATH_V1_GENERICS_DELETE = PATH_V1 + "/algorithmGeneric/remove";
const PATH_V1_GENERICS_DETAIL = PATH_V1 + "/algorithmGeneric/get";
const PATH_V1_PUBLISHSAVE = PATH_V1 + "/algorithmGeneric/addAndPublish";
const PATH_V1_GETROOTALGORITHMDETAIL =
  PATH_V1 + "/rootCause/algorithmGeneric/list";
// 场景
const PATH_V1_MULTITENANCY = PATH_V1 + "/bizScene/list";
const PATH_V1_MULTITENANCY_ADD = PATH_V1 + "/bizScene/add";
const PATH_V1_MULTITENANCY_MODIFY = PATH_V1 + "/bizScene/modify";
const PATH_V1_MULTITENANCY_DELETE = PATH_V1 + "/bizScene/remove";
const PATH_V1_MULTITENANCY_DETAIL = PATH_V1 + "/bizScene/get";
const PATH_V1_MULTITENANCY_GROUPBYSCENE =
  PATH_V1 + "/algorithm/name/groupByScene";
const PATH_V1_MULTITENANCY_VERSION_GROUPBYSCENE =
  PATH_V1 + "/algorithm/groupByScene";
// 任务管理
const PATH_V1_TASK = PATH_V1 + "/task/list";
const PATH_V1_TASK_ADD = PATH_V1 + "/task/add";
const PATH_V1_TASK_MODIFY = PATH_V1 + "/task/modify-basic";
const PATH_V1_TASK_MODIFY_GENERICS = PATH_V1 + "/task/modify-alg";
const PATH_V1_TASK_DELETE = PATH_V1 + "/task/remove";
const PATH_V1_TASK_DETAIL_LIST = PATH_V1 + "/task/group/sketchy";
const PATH_V1_TASK_DETAIL_LIST_INFO = PATH_V1 + "/task/group/fine";
const PATH_V1_TASK_DETAIL_LIST_INFO_TIME =
  PATH_V1 + "/task/series/treesteptimes";
const PATH_V1_TASK_DETAIL_LIST_INFO_ANOTHER_TIME =
  PATH_V1 + "/task/series/recentperiod";
const PATH_V1_TASK_DETAIL_LIST_CHARTS = PATH_V1 + "/task/series/algorithms";
const PATH_V1_TASK_DETAIL_CHARTS_INFO = PATH_V1 + "/task/series/result";
const PATH_V1_TASK_DETAIL_CHARTS_RAWDATA_INFO =
  PATH_V1 + "/task/series/rawdata";
const PATH_V1_TASK_DETAIL_CHARTS_INFO_HEARTBEATING = PATH_V1 + "/task";
const PATH_V1_TASK_DETAIL_ADD_CHART = PATH_V1 + "/task/comparison";
const PATH_V1_TASK_DETAIL_ADD_PARAMS = PATH_V1 + "/task/forecast/param";
const PATH_V1_TASK_DETAIL = PATH_V1 + "/task/get-one";
const PATH_V1_TASK_DETAIL_GENERICS = PATH_V1 + "/task/get-generics";
const PATH_V1_TASK_START = PATH_V1 + "/task/on";
const PATH_V1_TASK_STOP = PATH_V1 + "/task/off";
const PATH_V1_TASK_NAME = PATH_V1 + "/task/exist-name";
const PATH_V1_TASK_SCENE = PATH_V1 + "/bizScene/listByScene";
const PATH_V1_TASK_MODEL = PATH_V1 + "/task/model-list";
const PATH_V1_TASK_TARGET = PATH_V1 + "/task/target-list";
const PATH_V1_TASK_METRIC = PATH_V1 + "/task/metric-list";
const PATH_V1_TASK_TAGS = PATH_V1 + "/task/tags-list";
const PATH_V1_TASK_GROUP_OPTIONS = PATH_V1 + "/task/group/options";
//数据源
const PATH_V1_DATASOURCE = PATH_V1 + "/datasource/add"; //新建离线数据源
const PATH_V1_GETCSVHEADER = PATH_V1 + "/datasource/resolutionCsvHeader"; //上传csv文件，获取文件表头
const PATH_V1_ADDTAG = PATH_V1 + "/datatag/add"; //新建标签
const PATH_V1_TAGLIST = PATH_V1 + "/datatag/list"; //查询标签
const PATH_V1_DODBLIST = PATH_V1 + "/dodb/datastore/list"; //查询dodb数据表
const PATH_V1_DATASOURCELIST = PATH_V1 + "/datasource/list"; //获取数据源列表
const PATH_V1_DATASOURCE_DEL = PATH_V1 + "/datasource"; //删除数据表
const PATH_V1_DATASOURCE_FILE = PATH_V1 + "/datasource/addfilesource"; //新建文件数据源
const PATH_V1_DATASOURCE_SCHEMCONF = PATH_V1 + "/dodb/datastore/get";
const PATH_V1_DATASOURCE_SCHEMCONF_BYTABLETYPE =
  PATH_V1 + "/datastore/csv/columns";
//算法实验室
const PATH_V1_SINGLECALCULATE = PATH_V1 + "/logAnomalyDetection/calculate/one";
const PATH_V1_TASKRECOGNITION = PATH_V1 + "/logPatternRecognition/taskInit"; //模式识别查询计算结果
const PATH_V1_LOGPATTERNRECOGNITION = PATH_V1 + "/logPatternRecognition/result"; //模式识别查询计算结果
const PATH_V1_LOGGETPROGRESS = PATH_V1 + "/logPatternRecognition/getProgress"; //进度
const PATH_V1_MODELGROUP = PATH_V1 + "/rootCause/group/model"; //根据模型对象分组
const PATH_V1_TAGSGROUP = PATH_V1 + "/rootCause/group/tags"; //根据指标维度分组
const PATH_V1_MODIGENE = PATH_V1 + "/rootCause/modifyGeneric"; //修改公有化泛型
const PATH_V1_ADDGENERIC = PATH_V1 + "/rootCause/addGeneric"; //单个添加公有化泛型
const PATH_V1_TB_LIST = PATH_V1 + "/tuningBench/task/list"; //获取算法实验室列表
const PATH_V1_ADDTB = PATH_V1 + "/tuningBench/task/add"; //新建算法实验室列表列表//创建任务
const PATH_V1_DELTB = PATH_V1 + "/tuningBench/task/remove";
const PATH_V1_DELGENERIC = PATH_V1 + "/rootCause/removeGeneric"; //删除公有化泛型
const PATH_V1_GETTBDETAIL = PATH_V1 + "/tuningBench/task/get";
const PATH_V1_MODIFYTB = PATH_V1 + "/tuningBench/task/modify";
const PATH_V1_GETTBLIST = PATH_V1 + "/tuningBench/modelMetric/list";
const PATH_V1_SERIESLIST = PATH_V1 + "/tuningBench/modelMetric/series/list";
const PATH_V1_SERIESDATA = PATH_V1 + "/tuningBench/series/seriesData/list";
const PATH_V1_GETORIGINDATA = PATH_V1 + "/tuningBench/series/seriesData/get";
const PATH_V1_ADDFAVOR = PATH_V1 + "/tuningBench/modelMetric/favorite/add";
const PATH_V1_DELFAVOR = PATH_V1 + "/tuningBench/modelMetric/favorite/remove";
const PATH_V1_ADDALLFAVOR =
  PATH_V1 + "/tuningBench/modelMetric/favorite/batch/add";
const PATH_V1_DELALLFAVOR =
  PATH_V1 + "/tuningBench/modelMetric/favorite/batch/remove";
const PATH_V1_SEARCHMODEL = PATH_V1 + "/tuningBench/modelMetric/group/list";
const PATH_V1_ADDFAVO = PATH_V1 + "/tuningBench/series/favorite/add";
const PATH_V1_DELFAVO = PATH_V1 + "/tuningBench/series/favorite/remove";
const PATH_V1_TIME = PATH_V1 + "/tuningBench/task/time/get";
const PATH_V1_MODITIME = PATH_V1 + "/tuningBench/task/time/modify";
const PATH_V1_GETRESULT = PATH_V1 + "/tuningBench/series/result/list";
const PATH_V1_GETORIGN = PATH_V1 + "/tuningBench/series/result/get";
const PATH_V1_TRIGGER = PATH_V1 + "/tuningBench/series/trigger";
const PATH_V1_GENERICLIST = PATH_V1 + "/tuningBench/generic/list";
const PATH_V1_GENERICMODI = PATH_V1 + "/tuningBench/generic/private/modify";
const PATH_V1_GENERICSERIESLIST = PATH_V1 + "/tuningBench/generic/series/list";
const PATH_V1_ADDGENERI = PATH_V1 + "/tuningBench/generic/private/add";
const PATH_V1_DELETEGENERI = PATH_V1 + "/tuningBench/generic/private/remove";
const PATH_V1_GETMODEL = PATH_V1 + "/task/tuningBench/csvTask";
const PATH_V1_GENERIC_MODIFY = PATH_V1 + "/tuningBench/generic/modify";
const PATH_V1_GETSOURCE_TIME = PATH_V1 + "/tuningBench/task/time";
const PATH_V1_GETTASKTRAININGDAYS =
  PATH_V1 + "/tuningBench/task/calculate/trainingdays";
const PATH_V1_GETTASKTIMERANGE = PATH_V1 + "/tuningBench/task/timerange";
const PATH_V1_GETTASKPARAMS = PATH_V1 + "/tuningBench/task/forecast/param";
const PATH_V1_GETGENERICSNUM = PATH_V1 + "/tuningBench/generic/limit";
const PATH_V1_GETGROUPNODE = PATH_V1 + "/rootCause/group/nodelist";
const PATH_V1_GETGROUPMETRIC = PATH_V1 + "/rootCause/group/metric";
const PATH_V1_GETROOTCAUSEANALYSISRESULT =
  PATH_V1 + "/rootCause/analysis/result";
const PATH_V1_ROOTCAUSEFEEDBACKADD = PATH_V1 + "/rootCause/feedBack/add";
const PATH_V1_ROOTCAUSEGENERICDATA = PATH_V1 + "/rootCause/get/resultOrRawData";
const PATH_V1_ROOTCAUSECALCULAT = PATH_V1 + "/rootCause/generic/store";
const PATH_V1_ROOTCAUSERESET = PATH_V1 + "/rootCause/reset";
const PATH_V1_RUNROOTCAUSE = PATH_V1 + "/rootCause/analysis/run";
const PATH_V1_GETNODERELATIONS = PATH_V1 + "/rootCause/node/relations";
const PATH_V1_LOGORIGINTREND = PATH_V1 + "/logPatternRecognition/originTrend";
const PATH_V1_PATTERNRESULTS =
  PATH_V1 + "/logPatternRecognition/patternResults";
const PATH_V1_TASKUNSAVERAWDATA = PATH_V1 + "/task/unsave/series/rawdata";
const PATH_V1_HANDUPDATE = PATH_V1 + "/rootCause/entry/save";
const PATH_V1_TUNINGBENCHMETRIC =
  PATH_V1 + "/tuningBench/modelMetric/metric/get";
const PATH_V1_TUNINGBENCHMODEL = PATH_V1 + "/tuningBench/modelMetric/model/get";
//日志异常检测
const PATH_V1_ANOMALYRESULT = PATH_V1 + "/logAnomalyDetection/result/get";
const PATH_V1_ANOMALYRESULTREND =
  PATH_V1 + "/logAnomalyDetection/origin_log_trend";
const PATH_V1_ANOMALYRESULTRENDDETAIL =
  PATH_V1 + "/logAnomalyDetection/origin_log_trend_detail";
const PATH_V1_ORIGINLOGTREND =
  PATH_V1 + "/logAnomalyDetection/origin_log_trend";
const PATH_V1_GETCALCULATE = PATH_V1 + "/logAnomalyDetection/calculate";
const PATH_V1_GETPARTITIONFIELDVALUE =
  PATH_V1 + "/logAnomalyDetection/partition_field_values";
const PATH_V1_GETANOMALYCOUNTINFO =
  PATH_V1 + "/logAnomalyDetection/anomaly_count_info";
const PATH_V1_ANMALYORGINLOG = PATH_V1 + "/logAnomalyDetection/origin_log";
const PATH_V1_ANMALYFIELDSANALYZ =
  PATH_V1 + "/logAnomalyDetection/fields_analyze";
const PATH_V1_PROCESSRATIO = PATH_V1 + "/logAnomalyDetection/process_ratio";
const PATH_V1_GETTAGSKEYS = PATH_V1 + "/task/tagsKey-list";
const PATH_V1_GETTAGSVALUE = PATH_V1 + "/task/tagsValue-list";
//日志模式
//计算
const PATH_V1_GETLOGPATTERNCALCULATE =
  PATH_V1 + "/logPatternRecognition/calculate";
const PATH_V1_CHECKORIGINLOGS = PATH_V1 + "/logPatternRecognition/originLogs";
const PATH_V1_PATTERNLOGS = PATH_V1 + "/logPatternRecognition/patternLogs";
const PATH_V1_PATTERNTRENDS = PATH_V1 + "/logPatternRecognition/patternTrends";
//设置
const PATH_V1_RESETALGORITHM = PATH_V1 + "/";

const PATH_V1_TAG = PATH_V1 + "/tags";
const PATH_V1_DATATYPES = PATH_V1 + "/gettypes";
const PATH_V1_DATASET = PATH_V1 + "/datasets";
const PATH_V1_CATALOG = PATH_V1 + "/catalogs";
const PATH_V1_MODEL = PATH_V1 + "/dataquerymodels";
const PATH_V1_FUNCTION = PATH_V1 + "/functions";
const PATH_V1_STREAM = PATH_V1 + "/stream";
const PATH_V1_DASHBOARD = PATH_V1 + "/dashboard";
const PATH_V1_AUTH = PATH_V1 + "/auth";
const PATH_V1_STORE = PATH_V1 + "/store";
const PATH_V1_METRICS = PATH_V1 + "/algorithm/get";
const PATH_V1_TOKEN = PATH_V1 + "/access-token";
const PATH_V1_PIPELINE = PATH_V1 + "/pipelines";
const PATH_V1_TEMPLATE = PATH_V1 + "/pipeline-templates";
const PATH_V1_ALERTS = PATH_V1 + "/alerts";
const PATH_V1_USER = PATH_V1 + "/user";
const PATH_V1_ROLE = PATH_V1 + "/role";
const PATH_V1_ABNORMAL = PATH_POC_V1 + "/poc";
const PATH_V1_MATCH = MATCH_API + PATH_V1;
const PATH_V1_UPLOAD = PATH_V1 + "/upload";
const PATH_V1_ERRORLOG = PATH_V1 + "/processErrorLog";
const PATH_V1_SETTING = PATH_V1 + "/datasources";

export default {
  PATH_V1,
  LOGIN: "/login",
  LOGOUT: "/logout",
  CHECK_LOGIN: "/checklogin",
  // 算法相关
  ALGORITHM_API: PATH_V1_ALGORITHM,
  // 泛型相关
  GENERICS_API: PATH_V1_GENERICS,
  GENERICS_ADD_API: PATH_V1_GENERICS_ADD,
  GENERICS_PUBLISH_API: PATH_V1_GENERICS_PUBLISH,
  GENERICS_DELETE_API: PATH_V1_GENERICS_DELETE,
  GENERICS_DETAIL_API: PATH_V1_GENERICS_DETAIL,
  GETROOTALGORITHMDETAIL: PATH_V1_GETROOTALGORITHMDETAIL,
  // 场景相关
  MULTITENANCY_API: PATH_V1_MULTITENANCY,
  MULTITENANCY_ADD_API: PATH_V1_MULTITENANCY_ADD,
  MULTITENANCY_MODIFY_API: PATH_V1_MULTITENANCY_MODIFY,
  MULTITENANCY_DELETE_API: PATH_V1_MULTITENANCY_DELETE,
  MULTITENANCY_DETAIL_API: PATH_V1_MULTITENANCY_DETAIL,
  MULTITENANCY_GROUPBYSCENE_API: PATH_V1_MULTITENANCY_GROUPBYSCENE,
  MULTITENANCY_VERSION_GROUPBYSCENE_API:
    PATH_V1_MULTITENANCY_VERSION_GROUPBYSCENE,
  //任务管理相关
  TASK_API: PATH_V1_TASK,
  TASK_ADD_API: PATH_V1_TASK_ADD,
  TASK_MODIFY_API: PATH_V1_TASK_MODIFY,
  TASK_MODIFY_GENERICS_API: PATH_V1_TASK_MODIFY_GENERICS,
  TASK_DELETE_API: PATH_V1_TASK_DELETE,
  TASK_DETAIL_LIST_API: PATH_V1_TASK_DETAIL_LIST,
  TASK_GROUP_OPTIONS__API: PATH_V1_TASK_GROUP_OPTIONS,
  TASK_DETAIL_LIST_INFO_API: PATH_V1_TASK_DETAIL_LIST_INFO,
  TASK_DETAIL_LIST_INFO_TIME_API: PATH_V1_TASK_DETAIL_LIST_INFO_TIME,
  TASK_DETAIL_LIST_INFO_ANOTHER_TIME_API:
    PATH_V1_TASK_DETAIL_LIST_INFO_ANOTHER_TIME,
  TASK_DETAIL_LIST_CHARTS_API: PATH_V1_TASK_DETAIL_LIST_CHARTS,
  TASK_DETAIL_CHARTS_INFO_API: PATH_V1_TASK_DETAIL_CHARTS_INFO,
  TASK_DETAIL_CHARTS_RAWDATA_INFO_API: PATH_V1_TASK_DETAIL_CHARTS_RAWDATA_INFO,
  TASK_DETAIL_CHARTS_INFO_HEARTBEATING_API:
    PATH_V1_TASK_DETAIL_CHARTS_INFO_HEARTBEATING,
  TASK_DETAIL_ADD_CHART_API: PATH_V1_TASK_DETAIL_ADD_CHART,
  TASK_DETAIL_ADD_PARAMS: PATH_V1_TASK_DETAIL_ADD_PARAMS,
  TASK_DETAIL_API: PATH_V1_TASK_DETAIL,
  TASK_DETAIL_GENERICS_API: PATH_V1_TASK_DETAIL_GENERICS,
  TASK_START_API: PATH_V1_TASK_START,
  TASK_STOP_API: PATH_V1_TASK_STOP,
  TASK_NAME_API: PATH_V1_TASK_NAME,
  TASK_SCENE_API: PATH_V1_TASK_SCENE,
  TASK_MODEL_API: PATH_V1_TASK_MODEL,
  TASK_TARGET_API: PATH_V1_TASK_TARGET,
  TASK_METRIC_API: PATH_V1_TASK_METRIC,
  TASK_TAGS_API: PATH_V1_TASK_TAGS,
  //数据源相关
  DATASOURCE_ADD: PATH_V1_DATASOURCE,
  GETCSVHEADER: PATH_V1_GETCSVHEADER,
  DATASOURCE_ADD_TAG: PATH_V1_ADDTAG,
  DATASOURCE_TAG_LIST: PATH_V1_TAGLIST,
  DATASOURCE_DODB_LIST: PATH_V1_DODBLIST,
  DATASOURCE_LIST: PATH_V1_DATASOURCELIST,
  DATASOURCE_DEL: PATH_V1_DATASOURCE_DEL,
  DATASOURCE_ADDFILE: PATH_V1_DATASOURCE_FILE,
  DATASOURCE_GETSCHEM: PATH_V1_DATASOURCE_SCHEMCONF,
  DATASOURCE_GETSCHEMBYTABLETYPE: PATH_V1_DATASOURCE_SCHEMCONF_BYTABLETYPE,
  //算法实验室
  TB_SINGLECALCULATE: PATH_V1_SINGLECALCULATE,
  TB_TASKRECOGNITION: PATH_V1_TASKRECOGNITION,
  TB_LOGGETPROGRESS: PATH_V1_LOGGETPROGRESS,
  TB_LOGPATTERNRECOGNITION: PATH_V1_LOGPATTERNRECOGNITION,
  TB_MODELGROUP: PATH_V1_MODELGROUP,
  TB_TAGSGROUP: PATH_V1_TAGSGROUP,
  TB_UPDATEMO: PATH_V1_MODIGENE,
  TB_ADDGENERIC: PATH_V1_ADDGENERIC,
  TB_LIST: PATH_V1_TB_LIST,
  TB_ADD: PATH_V1_ADDTB,
  TB_DEL: PATH_V1_DELTB,
  TB_DELGENERIC: PATH_V1_DELGENERIC,
  TB_DETAIL: PATH_V1_GETTBDETAIL,
  TB_MODIFY: PATH_V1_MODIFYTB,
  TB_TASKLIST: PATH_V1_GETTBLIST,
  TB_SERIESLIST: PATH_V1_SERIESLIST,
  TB_SERIESDATA: PATH_V1_SERIESDATA,
  TB_ADDFAVOR: PATH_V1_ADDFAVOR,
  TB_DELFAVOR: PATH_V1_DELFAVOR,
  TB_ADDALLFAVOR: PATH_V1_ADDALLFAVOR,
  TB_DELALLFAVOR: PATH_V1_DELALLFAVOR,
  TB_MODELLIST: PATH_V1_SEARCHMODEL,
  TB_ADDSINGLEFAVO: PATH_V1_ADDFAVO,
  TB_DELSINGLEFAVO: PATH_V1_DELFAVO,
  TB_GETMODALTIME: PATH_V1_TIME,
  TB_MODIFYTIME: PATH_V1_MODITIME,
  TB_RESULT: PATH_V1_GETRESULT,
  TB_TRIGGER: PATH_V1_TRIGGER,
  TB_GENERICLIST: PATH_V1_GENERICLIST,
  TB_GENERICMODI: PATH_V1_GENERICMODI,
  TB_GENERICSERIESLIST: PATH_V1_GENERICSERIESLIST,
  TB_ADDGENERICLIST: PATH_V1_ADDGENERI,
  TB_DELETEDENERIC: PATH_V1_DELETEGENERI,
  TB_GETMODEL: PATH_V1_GETMODEL,
  TB_SAVEANDADD: PATH_V1_PUBLISHSAVE,
  TB_GENERIC_MODIFY: PATH_V1_GENERIC_MODIFY,
  TB_GETSOURCE_TIME: PATH_V1_GETSOURCE_TIME,
  TB_GETTASKTRAININGDAYS: PATH_V1_GETTASKTRAININGDAYS,
  TB_GETTASKTIMERANGE: PATH_V1_GETTASKTIMERANGE,
  TB_GETTASKPARAMS: PATH_V1_GETTASKPARAMS,
  TB_GETGENERICSNUM: PATH_V1_GETGENERICSNUM,
  TB_GETGROUPNODE: PATH_V1_GETGROUPNODE,
  TB_GETGROUPMETRIC: PATH_V1_GETGROUPMETRIC,
  TB_GETROOTCAUSEANALYSISRESULT: PATH_V1_GETROOTCAUSEANALYSISRESULT,
  TB_ROOTCAUSEFEEDBACKADD: PATH_V1_ROOTCAUSEFEEDBACKADD,
  TB_ROOTCAUSEGENERICDATA: PATH_V1_ROOTCAUSEGENERICDATA,
  TB_ROOTCAUSECALCULAT: PATH_V1_ROOTCAUSECALCULAT,
  TB_ROOTCAUSERESET: PATH_V1_ROOTCAUSERESET,
  TB_RUNROOTCAUSE: PATH_V1_RUNROOTCAUSE,
  TB_GETNODERELATIONS: PATH_V1_GETNODERELATIONS,
  TB_GETORIGIN: PATH_V1_GETORIGINDATA,
  TB_TASKUNSAVERAWDATA: PATH_V1_TASKUNSAVERAWDATA,
  TB_HANDUPDATE: PATH_V1_HANDUPDATE,
  TB_TUNINGBENCHMODEL: PATH_V1_TUNINGBENCHMODEL,
  TB_TUNINGBENCHMETRIC: PATH_V1_TUNINGBENCHMETRIC,
  //日志模式识别
  TB_GETLOGPATTERNCALCULATE: PATH_V1_GETLOGPATTERNCALCULATE,
  TB_LOGORIGINTREND: PATH_V1_LOGORIGINTREND,
  TB_PATTERNRESULTS: PATH_V1_PATTERNRESULTS,
  TB_CHECKORIGINLOGS: PATH_V1_CHECKORIGINLOGS,
  TB_PATTERNLOGS: PATH_V1_PATTERNLOGS,
  TB_PATTERNTRENDS: PATH_V1_PATTERNTRENDS,
  //日志异常检测
  TB_ANOMALYRESULT: PATH_V1_ANOMALYRESULT,
  TB_ANOMALYRESULTREND: PATH_V1_ANOMALYRESULTREND,
  TB_ANOMALYRESULTRENDDETAIL: PATH_V1_ANOMALYRESULTRENDDETAIL,
  TB_ORIGINLOGTREND: PATH_V1_ORIGINLOGTREND,
  TB_GETCALCULATE: PATH_V1_GETCALCULATE,
  TB_GETPARTITIONFIELDVALUE: PATH_V1_GETPARTITIONFIELDVALUE,
  TB_GETANOMALYCOUNTINFO: PATH_V1_GETANOMALYCOUNTINFO,
  TB_ANMALYORGINLOG: PATH_V1_ANMALYORGINLOG,
  TB_ANMALYFIELDSANALYZ: PATH_V1_ANMALYFIELDSANALYZ,
  TB_PROCESSRATIO: PATH_V1_PROCESSRATIO,
  TB_GETTAGSKEYS: PATH_V1_GETTAGSKEYS,
  TB_GETTAGSVALUE: PATH_V1_GETTAGSVALUE,
  //设置
  RESETALGORITHM_API: PATH_V1_RESETALGORITHM,

  DATASOURCE_API: PATH_V1_DATASOURCE,
  TAG_API: PATH_V1_TAG,
  DATASET_API: PATH_V1_DATASET,
  SCHEMA_API: PATH_V1_CATALOG,
  STREAM_API: PATH_V1_STREAM,
  MODEL_API: PATH_V1_MODEL,
  QUERY_API: PATH_V1_MODEL + "/query",
  FUNCTION_API: PATH_V1_FUNCTION,
  DASHBOARD: PATH_V1_DASHBOARD,
  CLICKHOUSE: PATH_V1_STORE + "/clickhouse",
  METRICS: PATH_V1_METRICS,
  TOKEN: PATH_V1_TOKEN,
  PIPELINE: PATH_V1_PIPELINE,
  PIPELINE_TEMPLATE: PATH_V1_TEMPLATE,
  ALERT: PATH_V1_ALERTS,
  RULE: PATH_V1_ALERTS + "/rule",
  USER: PATH_V1_USER,
  ROLE: PATH_V1_ROLE,
  ABNORMAL: PATH_V1_ABNORMAL,
  MATCH: PATH_V1_MATCH,
  UPLOAD: PATH_V1_UPLOAD,
  MATCH_API: PATH_V1_MATCH,
  ERRORLOG_API: PATH_V1_ERRORLOG,
  SETTING: PATH_V1_SETTING,
};
